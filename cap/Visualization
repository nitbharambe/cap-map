{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"VISUAL TEST","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNRD7Ec1qqf9J303sJArpCJ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"oIaD_2D1YJ22","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1616410523171,"user_tz":-60,"elapsed":6169,"user":{"displayName":"Daniel Xaverius Sagala","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiHxkZtOyxQ_eyrtn1g2j3XUbmaEaaPU7vFVH04og=s64","userId":"15730806749236886136"}},"outputId":"853cea68-7386-4d59-8071-2775a6e27016"},"source":["#Install libraries if using google colab\n","%pip install pandapower\n","%pip install simbench"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: pandapower in /usr/local/lib/python3.7/dist-packages (2.6.0)\n","Requirement already satisfied: xlrd in /usr/local/lib/python3.7/dist-packages (from pandapower) (1.1.0)\n","Requirement already satisfied: scipy<=1.6.0 in /usr/local/lib/python3.7/dist-packages (from pandapower) (1.4.1)\n","Requirement already satisfied: cryptography in /usr/local/lib/python3.7/dist-packages (from pandapower) (3.4.6)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from pandapower) (20.9)\n","Requirement already satisfied: pandas>=0.17 in /usr/local/lib/python3.7/dist-packages (from pandapower) (1.1.5)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.7/dist-packages (from pandapower) (2.5)\n","Requirement already satisfied: openpyxl in /usr/local/lib/python3.7/dist-packages (from pandapower) (2.5.9)\n","Requirement already satisfied: xlsxwriter in /usr/local/lib/python3.7/dist-packages (from pandapower) (1.3.7)\n","Requirement already satisfied: numpy>=0.11 in /usr/local/lib/python3.7/dist-packages (from pandapower) (1.19.5)\n","Requirement already satisfied: cffi>=1.12 in /usr/local/lib/python3.7/dist-packages (from cryptography->pandapower) (1.14.5)\n","Requirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->pandapower) (2.4.7)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.17->pandapower) (2.8.1)\n","Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.17->pandapower) (2018.9)\n","Requirement already satisfied: decorator>=4.3.0 in /usr/local/lib/python3.7/dist-packages (from networkx->pandapower) (4.4.2)\n","Requirement already satisfied: et-xmlfile in /usr/local/lib/python3.7/dist-packages (from openpyxl->pandapower) (1.0.1)\n","Requirement already satisfied: jdcal in /usr/local/lib/python3.7/dist-packages (from openpyxl->pandapower) (1.4.1)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.7/dist-packages (from cffi>=1.12->cryptography->pandapower) (2.20)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas>=0.17->pandapower) (1.15.0)\n","Requirement already satisfied: simbench in /usr/local/lib/python3.7/dist-packages (1.2.0)\n","Requirement already satisfied: pandapower>=2.2 in /usr/local/lib/python3.7/dist-packages (from simbench) (2.6.0)\n","Requirement already satisfied: openpyxl in /usr/local/lib/python3.7/dist-packages (from pandapower>=2.2->simbench) (2.5.9)\n","Requirement already satisfied: scipy<=1.6.0 in /usr/local/lib/python3.7/dist-packages (from pandapower>=2.2->simbench) (1.4.1)\n","Requirement already satisfied: cryptography in /usr/local/lib/python3.7/dist-packages (from pandapower>=2.2->simbench) (3.4.6)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from pandapower>=2.2->simbench) (20.9)\n","Requirement already satisfied: numpy>=0.11 in /usr/local/lib/python3.7/dist-packages (from pandapower>=2.2->simbench) (1.19.5)\n","Requirement already satisfied: xlsxwriter in /usr/local/lib/python3.7/dist-packages (from pandapower>=2.2->simbench) (1.3.7)\n","Requirement already satisfied: pandas>=0.17 in /usr/local/lib/python3.7/dist-packages (from pandapower>=2.2->simbench) (1.1.5)\n","Requirement already satisfied: xlrd in /usr/local/lib/python3.7/dist-packages (from pandapower>=2.2->simbench) (1.1.0)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.7/dist-packages (from pandapower>=2.2->simbench) (2.5)\n","Requirement already satisfied: et-xmlfile in /usr/local/lib/python3.7/dist-packages (from openpyxl->pandapower>=2.2->simbench) (1.0.1)\n","Requirement already satisfied: jdcal in /usr/local/lib/python3.7/dist-packages (from openpyxl->pandapower>=2.2->simbench) (1.4.1)\n","Requirement already satisfied: cffi>=1.12 in /usr/local/lib/python3.7/dist-packages (from cryptography->pandapower>=2.2->simbench) (1.14.5)\n","Requirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->pandapower>=2.2->simbench) (2.4.7)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.17->pandapower>=2.2->simbench) (2.8.1)\n","Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.17->pandapower>=2.2->simbench) (2018.9)\n","Requirement already satisfied: decorator>=4.3.0 in /usr/local/lib/python3.7/dist-packages (from networkx->pandapower>=2.2->simbench) (4.4.2)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.7/dist-packages (from cffi>=1.12->cryptography->pandapower>=2.2->simbench) (2.20)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas>=0.17->pandapower>=2.2->simbench) (1.15.0)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"9NacNoAcYe-E"},"source":["#Import the pandapower and the networks module:\n","import pandapower as pp\n","import pandapower.networks as nw\n","import simbench as sb\n","import pandas as pd\n","import numpy as np\n","import os,sys\n","\n","#Plotting\n","from pandapower.plotting.plotly.mapbox_plot import set_mapbox_token\n","from pandapower.plotting.plotly import simple_plotly, pf_res_plotly, vlevel_plotly\n","import matplotlib.pyplot as plt\n","import pandapower.plotting as plot\n","import pandapower.plotting.plotly as pplotly\n","try:\n","    import seaborn\n","    colors = seaborn.color_palette()\n","except:\n","    colors = [\"b\", \"g\", \"r\", \"c\", \"y\"]\n","%matplotlib inline\n","\n","#Timeseries\n","import tempfile\n","from pandapower.control import ConstControl\n","from pandapower.timeseries import DFData\n","from pandapower.timeseries import OutputWriter\n","from pandapower.timeseries.run_time_series import run_timeseries"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"mRD4gxN0Ymg6"},"source":["def init_net():\n","    '''\n","    Initialization of load and generation p_mw and q_mvar is needed because the run_timeseries replaces them after every iteration\n","    \n","    OUTPUT - \n","        net- Pandapower network with initial values\n","    '''\n","    net.load[['p_mw','q_mvar']]=initload\n","    net.sgen[['p_mw','q_mvar']]=initsgen\n","    return net\n","\n","def define_log():\n","    '''\n","    Creates output writer object required for timeseries simulation\n","    The timeseries module only calculates the values of variables mentioned here for each simulation. \n","    The temporary data gets stored in the output_dir directory\n","    \n","    OUTPUT\n","        ow - Output writer object\n","    '''\n","    ow = OutputWriter(net, time_steps, output_path=output_dir, output_file_type=\".json\")    \n","    ow.log_variable('res_bus','vm_pu')\n","    ow.log_variable('res_line', 'loading_percent')\n","    ow.log_variable('res_trafo', 'loading_percent')\n","    return ow\n","\n","def add_loadgen(net_t, loadorgen, conn_at_bus, size_p,size_q,prof):\n","    '''\n","    Adds a load or generation to the net.load or net.sgen table. \n","    Adds profile name to the profiles variable of the newly addded capacity.\n","\n","    INPUT\n","        net_t (PP net) - Pandapower net\n","        loadorgen (str) - 'sgen' or 'load' for generation or load for additional capacity connected\n","        conn_at_bus (int) - Bus at which additional capacity is connected\n","        prof (str) - Name of the profile. Must be available in the net.profiles of the input grid\n","        \n","    OUTPUT\n","        net_t (PP net) - Updated Pandapower net\n","        \n","    '''\n","    if loadorgen==\"load\":\n","        pp.create_load(net_t, conn_at_bus, p_mw=size_p, q_mvar=size_q)\n","        net_t.load.tail(1).profile=prof\n","    elif loadorgen==\"sgen\":\n","        pp.create_sgen(net_t, conn_at_bus, p_mw=size_p, q_mvar=size_q)\n","        net_t.sgen.tail(1).profile=prof\n","    else:\n","        return 0\n","    return net_t\n","\n","def drop_loadgen(net_t, loadorgen):\n","    '''\n","    Removes the last added capacity from the input grid added by add_loadgen\n","    \n","    INPUT\n","        net_t (PP net) - Pandapower net\n","        loadorgen (str) - 'sgen' or 'load' for generation or load for additional capacity connected\n","        \n","    OUTPUT\n","        net_t (PP net) - Updated Pandapower net\n","    '''\n","    if loadorgen==\"load\":\n","        net_t.load=net_t.load.head(-1)            \n","    elif loadorgen==\"sgen\":\n","        net_t.sgen=net_t.sgen.head(-1)\n","    return net_t\n","\n","def violations(net):\n","    '''\n","    Checks for any violations created in the grid by additional capacity.\n","    Loads the files created by timeseries simulation. Compares simulation values against the limits mentioned in the input grid.\n","    \n","    TODO: Create separate violations function for individual input. (Already done, might have to include it here)\n","    \n","    INPUT\n","        net (PP net) - Pandapower net\n","        \n","    OUTPUT\n","        check (bool) - 'True' for no violations. 'False' for violations present\n","        \n","    '''\n","    vm_pu_file = os.path.join(output_dir, \"res_bus\", \"vm_pu.json\")\n","    vm_pu = pd.read_json(vm_pu_file)\n","\n","    line_load_file = os.path.join(output_dir, \"res_line\", \"loading_percent.json\")\n","    line_load = pd.read_json(line_load_file)\n","\n","    trafo_load_file = os.path.join(output_dir, \"res_trafo\", \"loading_percent.json\")\n","    trafo_load = pd.read_json(trafo_load_file)\n","\n","    check = any(np.where(vm_pu.max() > net.bus['max_vm_pu'],True, False))\n","    check = check or any(np.where(vm_pu.min() < net.bus['min_vm_pu'],True, False))\n","    check = check or any(np.where(line_load.max() > net.line['max_loading_percent'],True, False))\n","    check = check or any(np.where(trafo_load.max() > net.trafo['max_loading_percent'],True, False))\n","    return not check\n","\n","def feas_chk(net,ow,conn_at_bus,loadorgen, size_p, size_q, prof):\n","    '''\n","    Initializes the PPnet, \n","    Adds additional capacity, \n","    applies load/generation profiles on all the grid elements,\n","    runs timeseries for the specific case and save the results in the temporary output directory, \n","    clears the application of profiles from the input grid (Deletes the Constcontrol objects), \n","    drops the added capacity.\n","\n","    BUG: More like pending TODO. Doesnt work for loads. Need to check process of how profiles from simbench are actually \n","    getting applied to Constcontrol know the fix. Also will lead to finding how profiles from input will be applied on \n","    the input grid.\n","    TODO: suppress/workaround printing of individual progress bars\n","    \n","    INPUT\n","        net (PP net) - Pandapower net\n","        ow (Object) - Output writer object\n","        loadorgen (str) - 'sgen' or 'load' for generation or load for additional capacity connected\n","        conn_at_bus (int) - Bus at which additional capacity is connected\n","        size_p (int) - Size of active power of additional capacity\n","        size_q (int) - Size of reactive power of additional capacity\n","        prof (str) - Name of the profile. Must be available in the net.profiles of the input grid\n","        \n","    OUTPUT\n","        feas_result (bool) - 'True' for feasible, 'False' for not feasible\n","        \n","    '''\n","    net=init_net()\n","    net=add_loadgen(net, loadorgen, conn_at_bus, size_p,size_q, prof)\n","    profiles = sb.get_absolute_values(net, profiles_instead_of_study_cases=True)\n","    sb.apply_const_controllers(net, profiles)    #create timeseries data from profiles and run powerflow\n","    run_timeseries(net,time_steps,verbose=True)               #Run powerflow only over time_steps\n","    net.controller=net.controller.iloc[0:0]\n","    net=drop_loadgen(net, loadorgen)\n","    feas_result=violations(net)\n","    return feas_result\n","\n","def max_cap(net,ow,conn_at_bus,loadorgen,ul_p,ll_p,prof):\n","    '''\n","    Seach algorithm using feas_chk function over the range of ll_p and ul_p capacities\n","    BUG: Doesnt work for capacity below 20MW, must require a minor fix\n","    \n","    INPUT\n","        net (PP net) - Pandapower net\n","        ow (Object) - Output writer object\n","        loadorgen (str) - 'sgen' or 'load' for generation or load for additional capacity connected\n","        conn_at_bus (int) - Bus at which additional capacity is connected\n","        ll_p (int) - Size of maximum power limit of additional capacity that can be added\n","        ul_p (int) - Size of minimum additional capacity that can be added (Set as 0)\n","        prof (str) - Name of the profile. Must be available in the net.profiles of the input grid\n","        \n","    OUTPUT\n","         (int) - Maximum capacitiy of load/generation that can be added at given bus\n","        \n","    '''\n","    no_iter=0\n","    [ul_chk,mid_chk,ll_chk]=False,False,False\n","    while not( ((ul_p-ll_p)<s_tol) | (ul_chk & mid_chk) | (no_iter>7) ):\n","        no_iter=no_iter+1\n","        mid_p=(ul_p+ll_p)/2\n","        ul_chk=feas_chk(net,ow,conn_at_bus,loadorgen, size_p=ul_p, size_q=inp_q,prof=prof)\n","        mid_chk=feas_chk(net,ow,conn_at_bus,loadorgen, size_p=mid_p, size_q=inp_q,prof=prof)\n","        if mid_chk==True:\n","            ll_p=mid_p\n","        elif mid_chk==False:\n","            ul_p=mid_p\n","        elif ul_chk:\n","            return ul_p\n","            break\n","    return ll_p\n","\n","def all_cap_map(net,ow,loadorgen,ul_p,ll_p,prof):\n","    '''\n","    Iterate the max_cap function over all busses in the grid. \n","    \n","    TODO: Add overall progess bar\n","    TODO: Speed up simulation, if needed: find execution time of each step\n","\n","    INPUT\n","        net (PP net) - Pandapower net\n","        ow (Object) - Output writer object\n","        loadorgen (str) - 'sgen' or 'load' for generation or load for additional capacity connected\n","        ll_p (int) - Size of maximum power limit of additional capacity that can be added\n","        ul_p (int) - Size of minimum additional capacity that can be added (Set as 0)\n","        prof (str) - Name of the profile. Must be available in the net.profiles of the input grid\n","        \n","    OUTPUT\n","         allcap (dataframe) - Maximum capacitiy of load/generation that can be added at all buses\n","    \n","    '''    \n","    allcap=net.bus[['name','vn_kv']]\n","    allcap['max_add_cap']=np.nan\n","    for conn_at_bus in range(len(net.bus)):\n","        allcap['max_add_cap'][conn_at_bus]=max_cap(net,ow=ow,conn_at_bus=conn_at_bus,loadorgen=loadorgen,ul_p=ul_p,ll_p=ll_p,prof=prof)\n","    return allcap"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"aIhfYPPCYuS8"},"source":["'''\n","Input grid for developing code is sb_code1\n","sb_code2 is the larger grid to test the code\n","Initial values of the loads and generation are stored\n","Maximum voltage limits are relaxed for testing sample code since the limit gets violated for the test grid without adding any capacity\n","'''\n","sb_code1 = \"1-MV-rural--1-sw\"  # rural MV grid of scenario 0 with full switchs\n","sb_code2 = \"1-HVMV-urban-all-0-sw\"  # urban hv grid with one connected mv grid which has the subnet 2.202\n","net = sb.get_simbench_net(sb_code1)\n","net.bus.max_vm_pu=net.bus.max_vm_pu*1.05\n","initload=net.load[['p_mw','q_mvar']]\n","initsgen=net.sgen[['p_mw','q_mvar']]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"z4Cjy33jY9GN"},"source":["'''\n","time_steps:Set time steps in range for the timeseries module to compute over. \n","    This parameter must be of same length as the length of profiles.\n","ll_p and ul_p : limits for maximum and minimum capacity that can be added to any bus\n","inp_q: input reactive power for added capacity. Assumed constant\n","tol: Search algorithm tolerance (in MW)\n","output_dir : Set directory for storing the logged varaiables. \n","    Commented output_dir line is for setting directory in the temporary files of the computer.\n","ow: Create the output writer object ow\n","'''\n","time_steps=range(96)\n","ll_p=20\n","ul_p=90\n","inp_q=0.1\n","s_tol=1\n","\n","output_dir = os.path.join(tempfile.gettempdir(), \"simp_cap_v3\")\n","#output_dir = os.path.join('C:\\\\Users\\\\nitbh\\\\OneDrive\\\\Documents\\\\IIPNB', \"simp_cap_v3\")\n","if not os.path.exists(output_dir):\n","    os.mkdir(output_dir)\n","ow=define_log()   #For logging variables\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"FIJgQLqyZAKX"},"source":["'''\n","Sample input. Use as needed\n","prof and loadorgen are needed for getting the map\n","Others are needed in case of individual capacity checks\n","'''\n","#size_pmw=10\n","#size_qmw=0.05\n","loadorgen='sgen'\n","#prof='L0-A'\n","prof='WP4'\n","#conn_at_bus=2"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"mbgOE22Facgp"},"source":["# Copyright (c) 2016-2020 by University of Kassel and Fraunhofer Institute for Energy Economics\n","# and Energy System Technology (IEE), Kassel. All rights reserved.\n"," \n"," \n","import pandas as pd\n"," \n","from pandapower.plotting.generic_geodata import create_generic_coordinates\n","from pandapower.plotting.plotly.mapbox_plot import *\n","from pandapower.plotting.plotly.traces import create_bus_trace, create_line_trace, \\\n","    create_trafo_trace, draw_traces, version_check\n","from pandapower.run import runpp\n"," \n","try:\n","    import pplog as logging\n","except ImportError:\n","    import logging\n","logger = logging.getLogger(__name__)\n"," \n"," \n","def pf_res_plotly1(net, cmap=\"Jet\", use_line_geodata=None, on_map=False, projection=None,\n","                  map_style='basic', figsize=1, aspectratio='auto', line_width=2, bus_size=10,\n","                  climits_volt=(0.9, 1.1), climits_load=(0, 100), cpos_volt=1.0, cpos_load=1.1,\n","                  filename=\"temp-plot.html\"):\n","    \"\"\"\n","    Plots a pandapower network in plotly\n","    using colormap for coloring lines according to line loading and buses according to voltage in p.u.\n","    If no geodata is available, artificial geodata is generated. For advanced plotting see the tutorial\n"," \n","    INPUT:\n","        **net** - The pandapower format network. If none is provided, mv_oberrhein() will be\n","        plotted as an example\n"," \n","    OPTIONAL:\n","        **respect_switches** (bool, False) - Respect switches when artificial geodata is created\n"," \n","        *cmap** (str, True) - name of the colormap\n"," \n","        *colors_dict** (dict, None) - by default 6 basic colors from default collor palette is used.\n","        Otherwise, user can define a dictionary in the form: voltage_kv : color\n"," \n","        **on_map** (bool, False) - enables using mapbox plot in plotly\n","        If provided geodata are not real geo-coordinates in lon/lat form, on_map will be set to False.\n"," \n","        **projection** (String, None) - defines a projection from which network geo-data will be transformed to\n","        lat-long. For each projection a string can be found at http://spatialreference.org/ref/epsg/\n"," \n","        **map_style** (str, 'basic') - enables using mapbox plot in plotly\n"," \n","            - 'streets'\n","            - 'bright'\n","            - 'light'\n","            - 'dark'\n","            - 'satellite'\n"," \n","        **figsize** (float, 1) - aspectratio is multiplied by it in order to get final image size\n"," \n","        **aspectratio** (tuple, 'auto') - when 'auto' it preserves original aspect ratio of the network geodata\n","        any custom aspectration can be given as a tuple, e.g. (1.2, 1)\n"," \n","        **line_width** (float, 1.0) - width of lines\n"," \n","        **bus_size** (float, 10.0) -  size of buses to plot.\n"," \n","        **climits_volt** (tuple, (0.9, 1.0)) - limits of the colorbar for voltage\n"," \n","        **climits_load** (tuple, (0, 100)) - limits of the colorbar for line_loading\n"," \n","        **cpos_volt** (float, 1.0) - position of the bus voltage colorbar\n"," \n","        **cpos_load** (float, 1.1) - position of the loading percent colorbar\n"," \n","        **filename** (str, \"temp-plot.html\") - filename / path to plot to. Should end on *.html\n"," \n","    OUTPUT:\n","        **figure** (graph_objs._figure.Figure) figure object\n"," \n","    \"\"\"\n","    version_check()\n","    if 'res_bus' not in net or net.get('res_bus').shape[0] == 0:\n","        logger.warning('There are no Power Flow results. A Newton-Raphson power flow will be executed.')\n","        runpp(net)\n"," \n","    # create geocoord if none are available\n","    if 'line_geodata' not in net:\n","        net.line_geodata = pd.DataFrame(columns=['coords'])\n","    if 'bus_geodata' not in net:\n","        net.bus_geodata = pd.DataFrame(columns=[\"x\", \"y\"])\n","    if len(net.line_geodata) == 0 and len(net.bus_geodata) == 0:\n","        logger.warning(\"No or insufficient geodata available --> Creating artificial coordinates.\" +\n","                       \" This may take some time\")\n","        create_generic_coordinates(net, respect_switches=True)\n","        if on_map:\n","            logger.warning(\"Map plots not available with artificial coordinates and will be disabled!\")\n","            on_map = False\n"," \n","    # check if geodata are real geographycal lat/lon coordinates using geopy\n","    if on_map and projection is not None:\n","        geo_data_to_latlong(net, projection=projection)\n"," \n","    # ----- Buses ------\n","    # initializating bus trace\n","    # hoverinfo which contains name and pf results\n","    precision = 3\n","    hoverinfo = (\n","            net.bus.name.astype(str) + '<br />' +\n","            'V_m = ' + net.res_bus.vm_pu.round(precision).astype(str) + 'pu' + '<br />' +\n","            'V_m = ' + (net.res_bus.vm_pu * net.bus.vn_kv.round(2)).round(precision).astype(str) + ' kV' + '<br />' +\n","            'Max_cap =' + net.load.max_load.astype(str) + 'MW' + '<br />' +\n","            'V_a = ' + net.res_bus.va_degree.round(precision).astype(str) + ' deg').tolist()\n","    hoverinfo = pd.Series(index=net.bus.index, data=hoverinfo)\n","    bus_trace = create_bus_trace(net, net.bus.index, size=bus_size, infofunc=hoverinfo, cmap=cmap,\n","                                 cbar_title='Bus Voltage [pu]', cmin=climits_volt[0], cmax=climits_volt[1],\n","                                 cpos=cpos_volt)\n"," \n","    # ----- Lines ------\n","    # if bus geodata is available, but no line geodata\n","    # if bus geodata is available, but no line geodata\n","    cmap_lines = 'jet' if cmap == 'Jet' else cmap\n","    if use_line_geodata is None:\n","        use_line_geodata = False if len(net.line_geodata) == 0 else True\n","    elif use_line_geodata and len(net.line_geodata) == 0:\n","        logger.warning(\"No or insufficient line geodata available --> only bus geodata will be used.\")\n","        use_line_geodata = False\n","    # hoverinfo which contains name and pf results\n","    hoverinfo = (\n","            net.line.name.astype(str) + '<br />' +\n","            'I = ' + net.res_line.loading_percent.round(precision).astype(str) + ' %' + '<br />' +\n","            'I_from = ' + net.res_line.i_from_ka.round(precision).astype(str) + ' kA' + '<br />' +\n","            'I_to = ' + net.res_line.i_to_ka.round(precision).astype(str) + ' kA' + '<br />').tolist()\n","    hoverinfo = pd.Series(index=net.line.index, data=hoverinfo)\n","    line_traces = create_line_trace(net, use_line_geodata=use_line_geodata, respect_switches=True,\n","                                    width=line_width,\n","                                    infofunc=hoverinfo,\n","                                    cmap=cmap_lines,\n","                                    cmap_vals=net.res_line['loading_percent'].values,\n","                                    cmin=climits_load[0],\n","                                    cmax=climits_load[1],\n","                                    cbar_title='Line Loading [%]',\n","                                    cpos=cpos_load)\n"," \n","    # ----- Trafos ------\n","    # hoverinfo which contains name and pf results\n","    hoverinfo = (\n","            net.trafo.name.astype(str) + '<br />' +\n","            'I = ' + net.res_trafo.loading_percent.round(precision).astype(str) + ' %' + '<br />' +\n","            'I_hv = ' + net.res_trafo.i_hv_ka.round(precision).astype(str) + ' kA' + '<br />' +\n","            'I_lv = ' + net.res_trafo.i_lv_ka.round(precision).astype(str) + ' kA' + '<br />').tolist()\n","    hoverinfo = pd.Series(index=net.trafo.index, data=hoverinfo)\n","    trafo_traces = create_trafo_trace(net, width=line_width * 1.5, infofunc=hoverinfo,\n","                                      cmap=cmap_lines, cmin=0, cmax=100)\n"," \n","    # ----- Ext grid ------\n","    # get external grid from create_bus_trace\n","    marker_type = 'circle' if on_map else 'square'\n","    ext_grid_trace = create_bus_trace(net, buses=net.ext_grid.bus,\n","                                      color='grey', size=bus_size * 2, trace_name='external_grid',\n","                                      patch_type=marker_type)\n"," \n","    return draw_traces(line_traces + trafo_traces + ext_grid_trace + bus_trace,\n","                       showlegend=False, aspectratio=aspectratio, on_map=on_map,\n","                       map_style=map_style, figsize=figsize, filename=filename)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"K-kRRp2emUaB","executionInfo":{"status":"ok","timestamp":1616411345862,"user_tz":-60,"elapsed":431,"user":{"displayName":"Daniel Xaverius Sagala","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiHxkZtOyxQ_eyrtn1g2j3XUbmaEaaPU7vFVH04og=s64","userId":"15730806749236886136"}}},"source":["net.sgen['max_sgen']=np.random.randint(0,100,net.sgen.shape[0])\n","net.load['max_load']=np.random.randint(0,100,net.load.shape[0])"],"execution_count":75,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IVX0e3zlmfhk","executionInfo":{"status":"ok","timestamp":1616411347303,"user_tz":-60,"elapsed":422,"user":{"displayName":"Daniel Xaverius Sagala","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiHxkZtOyxQ_eyrtn1g2j3XUbmaEaaPU7vFVH04og=s64","userId":"15730806749236886136"}},"outputId":"521ecc90-21f4-4dad-e72c-b46efe9be639"},"source":["'Max_cap=' + net.load.max_load.astype(str) + 'MW'+ '<br />'"],"execution_count":76,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0     Max_cap=43MW<br />\n","1     Max_cap=59MW<br />\n","2     Max_cap=99MW<br />\n","3     Max_cap=66MW<br />\n","4     Max_cap=11MW<br />\n","             ...        \n","91    Max_cap=93MW<br />\n","92    Max_cap=44MW<br />\n","93     Max_cap=8MW<br />\n","94    Max_cap=94MW<br />\n","95    Max_cap=27MW<br />\n","Name: max_load, Length: 96, dtype: object"]},"metadata":{"tags":[]},"execution_count":76}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":712},"id":"FIYbNkyraSrf","executionInfo":{"status":"ok","timestamp":1616411350913,"user_tz":-60,"elapsed":2113,"user":{"displayName":"Daniel Xaverius Sagala","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiHxkZtOyxQ_eyrtn1g2j3XUbmaEaaPU7vFVH04og=s64","userId":"15730806749236886136"}},"outputId":"f70f3a70-1f5f-4d92-ab6c-6b7de3c190fd"},"source":["#from pandapower.plotting.plotly import pf_res_plotly\n","#from pandapower.networks import mv_oberrhein\n","sb_code1 = \"1-MV-rural--1-sw\"  # rural MV grid of scenario 0 with full switchs\n","#sb_code2 = \"1-HVMV-urban-all-0-sw\"  # urban hv grfid with one connected mv grid which has the subnet 2.202\n","#net = sb.get_simbench_net(sb_code1)\n","pf_res_plotly1(net)"],"execution_count":77,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>\n","            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>\n","                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script>    \n","            <div id=\"97ef910e-3b00-43ac-b234-8a493da910bf\" class=\"plotly-graph-div\" style=\"height:695.0471698112736px; width:700.0px;\"></div>\n","            <script type=\"text/javascript\">\n","                \n","                    window.PLOTLYENV=window.PLOTLYENV || {};\n","                    \n","                if (document.getElementById(\"97ef910e-3b00-43ac-b234-8a493da910bf\")) {\n","                    Plotly.newPlot(\n","                        '97ef910e-3b00-43ac-b234-8a493da910bf',\n","                        [{\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(255.0,200.18518518518525,0.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 1<br />I = 69.535 %<br />I_from = 0.153 kA<br />I_to = 0.153 kA<br />\", \"type\": \"scatter\", \"x\": [11.4096, 11.4097, 11.4098], \"y\": [53.6414, 53.64165, 53.6419]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(228.22580645161287,255.0,18.548387096774196)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 2<br />I = 62.538 %<br />I_from = 0.138 kA<br />I_to = 0.138 kA<br />\", \"type\": \"scatter\", \"x\": [11.4098, 11.4098, 11.4098], \"y\": [53.6419, 53.64215, 53.6424]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(170.16129032258064,255.0,76.61290322580645)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 3<br />I = 55.554 %<br />I_from = 0.122 kA<br />I_to = 0.122 kA<br />\", \"type\": \"scatter\", \"x\": [11.4098, 11.40975, 11.4097], \"y\": [53.6424, 53.64255, 53.6427]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,204.77272727272725)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 4<br />I = 6.708 %<br />I_from = 0.019 kA<br />I_to = 0.019 kA<br />\", \"type\": \"scatter\", \"x\": [11.4097, 11.4108, 11.4119], \"y\": [53.6427, 53.64705, 53.6514]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,200.22727272727272)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 5<br />I = 6.54 %<br />I_from = 0.014 kA<br />I_to = 0.014 kA<br />\", \"type\": \"scatter\", \"x\": [11.4119, 11.41185, 11.4118], \"y\": [53.6514, 53.65155, 53.6517]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,191.13636363636363)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 6<br />I = 5.582 %<br />I_from = 0.012 kA<br />I_to = 0.012 kA<br />\", \"type\": \"scatter\", \"x\": [11.4118, 11.41175, 11.4117], \"y\": [53.6517, 53.6519, 53.6521]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,177.5)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 7<br />I = 4.483 %<br />I_from = 0.009 kA<br />I_to = 0.01 kA<br />\", \"type\": \"scatter\", \"x\": [11.4117, 11.411, 11.4103], \"y\": [53.6521, 53.6523, 53.6525]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,168.4090909090909)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 8<br />I = 3.635 %<br />I_from = 0.008 kA<br />I_to = 0.008 kA<br />\", \"type\": \"scatter\", \"x\": [11.4103, 11.4101, 11.4099], \"y\": [53.6525, 53.6525, 53.6525]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,159.3181818181818)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 9<br />I = 2.945 %<br />I_from = 0.006 kA<br />I_to = 0.006 kA<br />\", \"type\": \"scatter\", \"x\": [11.4099, 11.409749999999999, 11.4096], \"y\": [53.6525, 53.6528, 53.6531]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,132.04545454545453)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 10<br />I = 0.619 %<br />I_from = 0.001 kA<br />I_to = 0.001 kA<br />\", \"type\": \"scatter\", \"x\": [11.4117, 11.412099999999999, 11.4125], \"y\": [53.6521, 53.65245, 53.6528]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(160.48387096774192,255.0,86.29032258064515)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 11<br />I = 54.595 %<br />I_from = 0.093 kA<br />I_to = 0.093 kA<br />\", \"type\": \"scatter\", \"x\": [11.4097, 11.4093, 11.4089], \"y\": [53.6427, 53.646649999999994, 53.6506]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,96.5,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 12<br />I = 22.071 %<br />I_from = 0.038 kA<br />I_to = 0.038 kA<br />\", \"type\": \"scatter\", \"x\": [11.4089, 11.408999999999999, 11.4091], \"y\": [53.6506, 53.6509, 53.6512]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,88.5,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 13<br />I = 21.181 %<br />I_from = 0.06 kA<br />I_to = 0.06 kA<br />\", \"type\": \"scatter\", \"x\": [11.4096, 11.409099999999999, 11.4086], \"y\": [53.6414, 53.641149999999996, 53.6409]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,84.49999999999997,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 14<br />I = 20.871 %<br />I_from = 0.059 kA<br />I_to = 0.059 kA<br />\", \"type\": \"scatter\", \"x\": [11.4086, 11.40845, 11.4083], \"y\": [53.6409, 53.6408, 53.6407]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,96.5,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 15<br />I = 22.15 %<br />I_from = 0.063 kA<br />I_to = 0.063 kA<br />\", \"type\": \"scatter\", \"x\": [11.4083, 11.40805, 11.4078], \"y\": [53.6407, 53.6405, 53.6403]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,88.5,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 16<br />I = 21.407 %<br />I_from = 0.062 kA<br />I_to = 0.062 kA<br />\", \"type\": \"scatter\", \"x\": [11.4078, 11.405850000000001, 11.4039], \"y\": [53.6403, 53.638400000000004, 53.6365]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,36.49999999999997,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 17<br />I = 16.106 %<br />I_from = 0.047 kA<br />I_to = 0.047 kA<br />\", \"type\": \"scatter\", \"x\": [11.4039, 11.4015, 11.3991], \"y\": [53.6365, 53.6339, 53.6313]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,16.5,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 18<br />I = 14.299 %<br />I_from = 0.031 kA<br />I_to = 0.031 kA<br />\", \"type\": \"scatter\", \"x\": [11.3991, 11.398700000000002, 11.3983], \"y\": [53.6313, 53.63105, 53.6308]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,209.3181818181818)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 19<br />I = 7.403 %<br />I_from = 0.016 kA<br />I_to = 0.016 kA<br />\", \"type\": \"scatter\", \"x\": [11.3983, 11.397950000000002, 11.3976], \"y\": [53.6308, 53.63065, 53.6305]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,141.13636363636363)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 20<br />I = 1.207 %<br />I_from = 0.003 kA<br />I_to = 0.003 kA<br />\", \"type\": \"scatter\", \"x\": [11.3976, 11.39745, 11.3973], \"y\": [53.6305, 53.630399999999995, 53.6303]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,132.04545454545453)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 21<br />I = 0.427 %<br />I_from = 0.0 kA<br />I_to = 0.001 kA<br />\", \"type\": \"scatter\", \"x\": [11.3973, 11.3963, 11.3953], \"y\": [53.6303, 53.63005, 53.6298]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(144.3548387096774,255.0,102.41935483870967)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 22<br />I = 52.398 %<br />I_from = 0.115 kA<br />I_to = 0.115 kA<br />\", \"type\": \"scatter\", \"x\": [11.4096, 11.4098, 11.41], \"y\": [53.6414, 53.6387, 53.636]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(86.29032258064514,255.0,160.48387096774195)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 23<br />I = 45.463 %<br />I_from = 0.1 kA<br />I_to = 0.1 kA<br />\", \"type\": \"scatter\", \"x\": [11.41, 11.41045, 11.4109], \"y\": [53.636, 53.6347, 53.6334]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,132.5,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 24<br />I = 25.648 %<br />I_from = 0.044 kA<br />I_to = 0.044 kA<br />\", \"type\": \"scatter\", \"x\": [11.4109, 11.4104, 11.4099], \"y\": [53.6334, 53.6318, 53.6302]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 25<br />I = 12.07 %<br />I_from = 0.021 kA<br />I_to = 0.021 kA<br />\", \"type\": \"scatter\", \"x\": [11.4099, 11.4114, 11.4129], \"y\": [53.6302, 53.62695, 53.6237]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,227.49999999999997)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 26<br />I = 8.907 %<br />I_from = 0.015 kA<br />I_to = 0.015 kA<br />\", \"type\": \"scatter\", \"x\": [11.4099, 11.409749999999999, 11.4096], \"y\": [53.6302, 53.62845, 53.6267]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,222.95454545454544)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 27<br />I = 8.552 %<br />I_from = 0.024 kA<br />I_to = 0.024 kA<br />\", \"type\": \"scatter\", \"x\": [11.4096, 11.4094, 11.4092], \"y\": [53.6414, 53.6416, 53.6418]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,191.13636363636363)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 28<br />I = 5.846 %<br />I_from = 0.015 kA<br />I_to = 0.017 kA<br />\", \"type\": \"scatter\", \"x\": [11.4092, 11.4114, 11.4136], \"y\": [53.6418, 53.6425, 53.6432]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,182.04545454545453)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 29<br />I = 5.055 %<br />I_from = 0.014 kA<br />I_to = 0.014 kA<br />\", \"type\": \"scatter\", \"x\": [11.4136, 11.41385, 11.4141], \"y\": [53.6432, 53.64325, 53.6433]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,172.95454545454544)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 30<br />I = 4.25 %<br />I_from = 0.012 kA<br />I_to = 0.012 kA<br />\", \"type\": \"scatter\", \"x\": [11.4141, 11.4143, 11.4145], \"y\": [53.6433, 53.64335, 53.6434]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,163.86363636363635)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 31<br />I = 3.474 %<br />I_from = 0.01 kA<br />I_to = 0.01 kA<br />\", \"type\": \"scatter\", \"x\": [11.4145, 11.41475, 11.415], \"y\": [53.6434, 53.64345, 53.6435]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,159.3181818181818)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 32<br />I = 2.976 %<br />I_from = 0.007 kA<br />I_to = 0.008 kA<br />\", \"type\": \"scatter\", \"x\": [11.415, 11.4162, 11.4174], \"y\": [53.6435, 53.6437, 53.6439]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,154.77272727272728)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 33<br />I = 2.536 %<br />I_from = 0.006 kA<br />I_to = 0.007 kA<br />\", \"type\": \"scatter\", \"x\": [11.4174, 11.41875, 11.4201], \"y\": [53.6439, 53.6441, 53.6443]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,150.22727272727272)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 34<br />I = 2.256 %<br />I_from = 0.005 kA<br />I_to = 0.005 kA<br />\", \"type\": \"scatter\", \"x\": [11.4201, 11.4204, 11.4207], \"y\": [53.6443, 53.644400000000005, 53.6445]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,141.13636363636363)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 35<br />I = 1.268 %<br />I_from = 0.002 kA<br />I_to = 0.003 kA<br />\", \"type\": \"scatter\", \"x\": [11.4207, 11.4211, 11.4215], \"y\": [53.6445, 53.644549999999995, 53.6446]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,127.5)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 36<br />I = 0.281 %<br />I_from = 0.0 kA<br />I_to = 0.001 kA<br />\", \"type\": \"scatter\", \"x\": [11.4215, 11.421800000000001, 11.4221], \"y\": [53.6446, 53.6446, 53.6446]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(255.0,170.5555555555556,0.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 37<br />I = 72.962 %<br />I_from = 0.124 kA<br />I_to = 0.124 kA<br />\", \"type\": \"scatter\", \"x\": [11.4096, 11.4081, 11.4066], \"y\": [53.6414, 53.6431, 53.6448]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(237.9032258064516,255.0,8.870967741935484)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 38<br />I = 64.052 %<br />I_from = 0.109 kA<br />I_to = 0.109 kA<br />\", \"type\": \"scatter\", \"x\": [11.4066, 11.4064, 11.4062], \"y\": [53.6448, 53.64505, 53.6453]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(150.8064516129032,255.0,95.96774193548387)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 39<br />I = 53.128 %<br />I_from = 0.09 kA<br />I_to = 0.09 kA<br />\", \"type\": \"scatter\", \"x\": [11.4062, 11.404250000000001, 11.4023], \"y\": [53.6453, 53.6502, 53.6551]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(47.58064516129031,255.0,199.1935483870968)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 40<br />I = 40.902 %<br />I_from = 0.09 kA<br />I_to = 0.09 kA<br />\", \"type\": \"scatter\", \"x\": [11.4023, 11.40235, 11.4024], \"y\": [53.6551, 53.655699999999996, 53.6563]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,220.5,254.03225806451613)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 41<br />I = 34.273 %<br />I_from = 0.075 kA<br />I_to = 0.075 kA<br />\", \"type\": \"scatter\", \"x\": [11.4024, 11.40505, 11.4077], \"y\": [53.6563, 53.658100000000005, 53.6599]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,104.5,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 42<br />I = 23.04 %<br />I_from = 0.051 kA<br />I_to = 0.051 kA<br />\", \"type\": \"scatter\", \"x\": [11.4077, 11.40855, 11.4094], \"y\": [53.6599, 53.65875, 53.6576]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,40.5,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 43<br />I = 16.484 %<br />I_from = 0.036 kA<br />I_to = 0.036 kA<br />\", \"type\": \"scatter\", \"x\": [11.4094, 11.40945, 11.4095], \"y\": [53.6576, 53.6572, 53.6568]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,200.22727272727272)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 44<br />I = 6.558 %<br />I_from = 0.014 kA<br />I_to = 0.014 kA<br />\", \"type\": \"scatter\", \"x\": [11.4095, 11.4095, 11.4095], \"y\": [53.6568, 53.656099999999995, 53.6554]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(255.0,226.11111111111117,0.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 45<br />I = 66.837 %<br />I_from = 0.189 kA<br />I_to = 0.189 kA<br />\", \"type\": \"scatter\", \"x\": [11.4096, 11.40805, 11.4065], \"y\": [53.6414, 53.6416, 53.6418]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(218.54838709677418,255.0,28.22580645161291)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 46<br />I = 61.633 %<br />I_from = 0.174 kA<br />I_to = 0.174 kA<br />\", \"type\": \"scatter\", \"x\": [11.4065, 11.40415, 11.4018], \"y\": [53.6418, 53.642300000000006, 53.6428]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,128.5,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 47<br />I = 25.127 %<br />I_from = 0.07 kA<br />I_to = 0.071 kA<br />\", \"type\": \"scatter\", \"x\": [11.4018, 11.400400000000001, 11.399000000000001], \"y\": [53.6428, 53.6432, 53.6436]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,124.5,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 48<br />I = 24.973 %<br />I_from = 0.07 kA<br />I_to = 0.071 kA<br />\", \"type\": \"scatter\", \"x\": [11.399000000000001, 11.396650000000001, 11.3943], \"y\": [53.6436, 53.6438, 53.644]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,120.5,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 49<br />I = 24.534 %<br />I_from = 0.069 kA<br />I_to = 0.069 kA<br />\", \"type\": \"scatter\", \"x\": [11.3943, 11.393699999999999, 11.3931], \"y\": [53.644, 53.644, 53.644]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,136.49999999999994,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 50<br />I = 26.1 %<br />I_from = 0.074 kA<br />I_to = 0.074 kA<br />\", \"type\": \"scatter\", \"x\": [11.3931, 11.39285, 11.3926], \"y\": [53.644, 53.644, 53.644]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,254.77272727272725)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 51<br />I = 11.238 %<br />I_from = 0.032 kA<br />I_to = 0.032 kA<br />\", \"type\": \"scatter\", \"x\": [11.3926, 11.3924, 11.3922], \"y\": [53.644, 53.64375, 53.6435]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,4.499999999999972,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 52<br />I = 12.938 %<br />I_from = 0.036 kA<br />I_to = 0.037 kA<br />\", \"type\": \"scatter\", \"x\": [11.3922, 11.391950000000001, 11.3917], \"y\": [53.6435, 53.643299999999996, 53.6431]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,16.5,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 53<br />I = 14.345 %<br />I_from = 0.04 kA<br />I_to = 0.041 kA<br />\", \"type\": \"scatter\", \"x\": [11.3917, 11.39155, 11.3914], \"y\": [53.6431, 53.643, 53.6429]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,36.49999999999997,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 54<br />I = 16.109 %<br />I_from = 0.045 kA<br />I_to = 0.046 kA<br />\", \"type\": \"scatter\", \"x\": [11.3914, 11.3906, 11.3898], \"y\": [53.6429, 53.64235, 53.6418]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,32.5,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 55<br />I = 15.928 %<br />I_from = 0.044 kA<br />I_to = 0.045 kA<br />\", \"type\": \"scatter\", \"x\": [11.3898, 11.388549999999999, 11.3873], \"y\": [53.6418, 53.640150000000006, 53.6385]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,254.77272727272725)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 56<br />I = 11.291 %<br />I_from = 0.031 kA<br />I_to = 0.032 kA<br />\", \"type\": \"scatter\", \"x\": [11.3873, 11.387, 11.3867], \"y\": [53.6385, 53.6369, 53.6353]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,204.77272727272725)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 57<br />I = 7.014 %<br />I_from = 0.017 kA<br />I_to = 0.02 kA<br />\", \"type\": \"scatter\", \"x\": [11.3867, 11.388649999999998, 11.3906], \"y\": [53.6353, 53.632999999999996, 53.6307]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,204.77272727272725)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 58<br />I = 6.947 %<br />I_from = 0.019 kA<br />I_to = 0.02 kA<br />\", \"type\": \"scatter\", \"x\": [11.3906, 11.39095, 11.3913], \"y\": [53.6307, 53.630399999999995, 53.6301]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,191.13636363636363)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 59<br />I = 5.658 %<br />I_from = 0.016 kA<br />I_to = 0.016 kA<br />\", \"type\": \"scatter\", \"x\": [11.3913, 11.3915, 11.3917], \"y\": [53.6301, 53.629850000000005, 53.6296]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,182.04545454545453)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 60<br />I = 4.882 %<br />I_from = 0.014 kA<br />I_to = 0.014 kA<br />\", \"type\": \"scatter\", \"x\": [11.3917, 11.3918, 11.3919], \"y\": [53.6296, 53.629450000000006, 53.6293]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,191.13636363636363)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 61<br />I = 5.586 %<br />I_from = 0.015 kA<br />I_to = 0.016 kA<br />\", \"type\": \"scatter\", \"x\": [11.3919, 11.39185, 11.3918], \"y\": [53.6293, 53.628550000000004, 53.6278]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,150.22727272727272)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 62<br />I = 2.234 %<br />I_from = 0.006 kA<br />I_to = 0.006 kA<br />\", \"type\": \"scatter\", \"x\": [11.3918, 11.3915, 11.3912], \"y\": [53.6278, 53.627250000000004, 53.6267]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,168.4090909090909)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 63<br />I = 3.562 %<br />I_from = 0.01 kA<br />I_to = 0.01 kA<br />\", \"type\": \"scatter\", \"x\": [11.3912, 11.390899999999998, 11.3906], \"y\": [53.6267, 53.62665, 53.6266]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,191.13636363636363)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 64<br />I = 5.514 %<br />I_from = 0.016 kA<br />I_to = 0.016 kA<br />\", \"type\": \"scatter\", \"x\": [11.3906, 11.39035, 11.3901], \"y\": [53.6266, 53.62675, 53.6269]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,186.5909090909091)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 65<br />I = 5.352 %<br />I_from = 0.015 kA<br />I_to = 0.015 kA<br />\", \"type\": \"scatter\", \"x\": [11.3901, 11.39005, 11.39], \"y\": [53.6269, 53.6272, 53.6275]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,108.5,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 66<br />I = 23.157 %<br />I_from = 0.066 kA<br />I_to = 0.066 kA<br />\", \"type\": \"scatter\", \"x\": [11.3926, 11.3924, 11.3922], \"y\": [53.644, 53.6445, 53.645]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,186.5909090909091)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 67<br />I = 5.369 %<br />I_from = 0.015 kA<br />I_to = 0.015 kA<br />\", \"type\": \"scatter\", \"x\": [11.3922, 11.3919, 11.3916], \"y\": [53.645, 53.6455, 53.646]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,72.5,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 68<br />I = 19.8 %<br />I_from = 0.034 kA<br />I_to = 0.034 kA<br />\", \"type\": \"scatter\", \"x\": [11.4096, 11.409099999999999, 11.4086], \"y\": [53.6414, 53.6393, 53.6372]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,64.5,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 69<br />I = 19.058 %<br />I_from = 0.032 kA<br />I_to = 0.032 kA<br />\", \"type\": \"scatter\", \"x\": [11.4086, 11.41325, 11.4179], \"y\": [53.6372, 53.63375, 53.6303]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,36.49999999999997,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 70<br />I = 16.031 %<br />I_from = 0.035 kA<br />I_to = 0.035 kA<br />\", \"type\": \"scatter\", \"x\": [11.4179, 11.4179, 11.4179], \"y\": [53.6303, 53.6301, 53.6299]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,64.5,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 71<br />I = 18.785 %<br />I_from = 0.041 kA<br />I_to = 0.041 kA<br />\", \"type\": \"scatter\", \"x\": [11.4179, 11.4179, 11.4179], \"y\": [53.6299, 53.6295, 53.6291]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,84.49999999999997,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 72<br />I = 20.746 %<br />I_from = 0.046 kA<br />I_to = 0.046 kA<br />\", \"type\": \"scatter\", \"x\": [11.4179, 11.41655, 11.4152], \"y\": [53.6291, 53.628600000000006, 53.6281]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,12.5,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 73<br />I = 13.821 %<br />I_from = 0.03 kA<br />I_to = 0.03 kA<br />\", \"type\": \"scatter\", \"x\": [11.4152, 11.4145, 11.4138], \"y\": [53.6281, 53.6289, 53.6297]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,204.77272727272725)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 74<br />I = 6.918 %<br />I_from = 0.015 kA<br />I_to = 0.015 kA<br />\", \"type\": \"scatter\", \"x\": [11.4138, 11.41265, 11.4115], \"y\": [53.6297, 53.631299999999996, 53.6329]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(73.38709677419354,255.0,173.38709677419354)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 75<br />I = 44.127 %<br />I_from = 0.097 kA<br />I_to = 0.097 kA<br />\", \"type\": \"scatter\", \"x\": [11.4096, 11.4097, 11.4098], \"y\": [53.6414, 53.6413, 53.6412]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(70.16129032258063,255.0,176.61290322580646)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 76<br />I = 43.502 %<br />I_from = 0.096 kA<br />I_to = 0.096 kA<br />\", \"type\": \"scatter\", \"x\": [11.4098, 11.4099, 11.41], \"y\": [53.6412, 53.6411, 53.641000000000005]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(63.70967741935483,255.0,183.06451612903228)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 77<br />I = 42.898 %<br />I_from = 0.094 kA<br />I_to = 0.094 kA<br />\", \"type\": \"scatter\", \"x\": [11.41, 11.4101, 11.4102], \"y\": [53.641000000000005, 53.6409, 53.6408]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(73.38709677419354,255.0,173.38709677419354)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 78<br />I = 43.863 %<br />I_from = 0.096 kA<br />I_to = 0.096 kA<br />\", \"type\": \"scatter\", \"x\": [11.4102, 11.410350000000001, 11.4105], \"y\": [53.6408, 53.640699999999995, 53.6406]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(66.93548387096773,255.0,179.83870967741936)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 79<br />I = 43.349 %<br />I_from = 0.095 kA<br />I_to = 0.095 kA<br />\", \"type\": \"scatter\", \"x\": [11.4105, 11.41065, 11.4108], \"y\": [53.6406, 53.64045, 53.6403]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(79.8387096774193,255.0,166.93548387096777)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 80<br />I = 44.589 %<br />I_from = 0.098 kA<br />I_to = 0.098 kA<br />\", \"type\": \"scatter\", \"x\": [11.4108, 11.41095, 11.4111], \"y\": [53.6403, 53.640150000000006, 53.64]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(89.51612903225806,255.0,157.25806451612902)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 81<br />I = 46.018 %<br />I_from = 0.101 kA<br />I_to = 0.101 kA<br />\", \"type\": \"scatter\", \"x\": [11.4111, 11.411349999999999, 11.4116], \"y\": [53.64, 53.639849999999996, 53.6397]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(86.29032258064514,255.0,160.48387096774195)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 82<br />I = 45.66 %<br />I_from = 0.1 kA<br />I_to = 0.1 kA<br />\", \"type\": \"scatter\", \"x\": [11.4116, 11.411850000000001, 11.4121], \"y\": [53.6397, 53.6395, 53.6393]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(86.29032258064514,255.0,160.48387096774195)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 83<br />I = 45.319 %<br />I_from = 0.1 kA<br />I_to = 0.1 kA<br />\", \"type\": \"scatter\", \"x\": [11.4121, 11.41235, 11.4126], \"y\": [53.6393, 53.6392, 53.6391]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(83.06451612903224,255.0,163.70967741935485)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 84<br />I = 45.007 %<br />I_from = 0.099 kA<br />I_to = 0.099 kA<br />\", \"type\": \"scatter\", \"x\": [11.4126, 11.413, 11.4134], \"y\": [53.6391, 53.6389, 53.6387]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(118.54838709677418,255.0,128.22580645161293)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 85<br />I = 49.268 %<br />I_from = 0.084 kA<br />I_to = 0.084 kA<br />\", \"type\": \"scatter\", \"x\": [11.4134, 11.4148, 11.4162], \"y\": [53.6387, 53.63825, 53.6378]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(44.354838709677416,255.0,202.4193548387097)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 86<br />I = 40.387 %<br />I_from = 0.069 kA<br />I_to = 0.069 kA<br />\", \"type\": \"scatter\", \"x\": [11.4162, 11.41855, 11.4209], \"y\": [53.6378, 53.6374, 53.637]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,192.5,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 87<br />I = 31.624 %<br />I_from = 0.054 kA<br />I_to = 0.054 kA<br />\", \"type\": \"scatter\", \"x\": [11.4209, 11.4221, 11.4233], \"y\": [53.637, 53.63695, 53.6369]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,104.5,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 88<br />I = 22.979 %<br />I_from = 0.039 kA<br />I_to = 0.039 kA<br />\", \"type\": \"scatter\", \"x\": [11.4233, 11.42615, 11.429], \"y\": [53.6369, 53.63865, 53.6404]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,255.0)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 89<br />I = 11.406 %<br />I_from = 0.025 kA<br />I_to = 0.025 kA<br />\", \"type\": \"scatter\", \"x\": [11.429, 11.42905, 11.4291], \"y\": [53.6404, 53.64135, 53.6423]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,195.68181818181816)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 90<br />I = 5.881 %<br />I_from = 0.013 kA<br />I_to = 0.013 kA<br />\", \"type\": \"scatter\", \"x\": [11.4291, 11.42885, 11.4286], \"y\": [53.6423, 53.6427, 53.6431]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,182.04545454545453)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 91<br />I = 5.058 %<br />I_from = 0.011 kA<br />I_to = 0.011 kA<br />\", \"type\": \"scatter\", \"x\": [11.4286, 11.42835, 11.4281], \"y\": [53.6431, 53.643299999999996, 53.6435]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,204.77272727272725)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 92<br />I = 7.03 %<br />I_from = 0.015 kA<br />I_to = 0.015 kA<br />\", \"type\": \"scatter\", \"x\": [11.4281, 11.427900000000001, 11.4277], \"y\": [53.6435, 53.6437, 53.6439]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,204.77272727272725)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 93<br />I = 6.763 %<br />I_from = 0.015 kA<br />I_to = 0.015 kA<br />\", \"type\": \"scatter\", \"x\": [11.4277, 11.427399999999999, 11.4271], \"y\": [53.6439, 53.64405, 53.6442]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,127.5)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 94<br />I = 0.271 %<br />I_from = 0.001 kA<br />I_to = 0.0 kA<br />\", \"type\": \"scatter\", \"x\": [11.4125, 11.41985, 11.4272], \"y\": [53.6528, 53.65415, 53.6555]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(0.0,0.0,127.5)\", \"width\": 2}, \"mode\": \"lines\", \"name\": \"lines\", \"text\": \"MV1.101 Line 95<br />I = 0.288 %<br />I_from = 0.001 kA<br />I_to = 0.0 kA<br />\", \"type\": \"scatter\", \"x\": [11.3912, 11.3942, 11.3972], \"y\": [53.6267, 53.62225, 53.6178]}, {\"marker\": {\"cmax\": 100, \"cmin\": 0, \"color\": \"rgb(255,255,255)\", \"colorbar\": {\"thickness\": 10, \"title\": {\"side\": \"right\", \"text\": \"Line Loading [%]\"}, \"x\": 1.1}, \"colorscale\": [[0.0, \"rgb(0,0,131)\"], [0.2, \"rgb(0,60,170)\"], [0.4, \"rgb(5,255,255)\"], [0.6, \"rgb(255,255,0)\"], [0.8, \"rgb(250,0,0)\"], [1.0, \"rgb(128,0,0)\"]], \"opacity\": 0, \"size\": 0}, \"mode\": \"markers\", \"type\": \"scatter\", \"x\": [11.4096], \"y\": [53.6414]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(128, 128, 128)\", \"dash\": \"dot\", \"width\": 1.0}, \"mode\": \"lines\", \"name\": \"disconnected branches\", \"text\": \"MV1.101 loop_line 4<br />I = 0.887 %<br />I_from = 0.002 kA<br />I_to = 0.0 kA<br />\", \"type\": \"scatter\", \"x\": [11.4221, 11.4246, 11.4271], \"y\": [53.6446, 53.6444, 53.6442]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(128, 128, 128)\", \"dash\": \"dot\", \"width\": 1.0}, \"mode\": \"lines\", \"name\": \"disconnected branches\", \"text\": \"MV1.101 loop_line 5<br />I = 0.262 %<br />I_from = 0.001 kA<br />I_to = 0.0 kA<br />\", \"type\": \"scatter\", \"x\": [11.4091, 11.409500000000001, 11.4099], \"y\": [53.6512, 53.65185, 53.6525]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(128, 128, 128)\", \"dash\": \"dot\", \"width\": 1.0}, \"mode\": \"lines\", \"name\": \"disconnected branches\", \"text\": \"MV1.101 loop_line 6<br />I = 0.453 %<br />I_from = 0.001 kA<br />I_to = 0.0 kA<br />\", \"type\": \"scatter\", \"x\": [11.39, 11.39095, 11.3919], \"y\": [53.6275, 53.6284, 53.6293]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(128, 128, 128)\", \"dash\": \"dot\", \"width\": 1.0}, \"mode\": \"lines\", \"name\": \"disconnected branches\", \"text\": \"MV1.101 loop_line 1<br />I = 0.413 %<br />I_from = 0.001 kA<br />I_to = 0.0 kA<br />\", \"type\": \"scatter\", \"x\": [11.4096, 11.40955, 11.4095], \"y\": [53.6531, 53.654250000000005, 53.6554]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(128, 128, 128)\", \"dash\": \"dot\", \"width\": 1.0}, \"mode\": \"lines\", \"name\": \"disconnected branches\", \"text\": \"MV1.101 loop_line 2<br />I = 0.578 %<br />I_from = 0.001 kA<br />I_to = 0.0 kA<br />\", \"type\": \"scatter\", \"x\": [11.3953, 11.3936, 11.3919], \"y\": [53.6298, 53.62955, 53.6293]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(128, 128, 128)\", \"dash\": \"dot\", \"width\": 1.0}, \"mode\": \"lines\", \"name\": \"disconnected branches\", \"text\": \"MV1.101 loop_line 3<br />I = 0.161 %<br />I_from = 0.0 kA<br />I_to = 0.0 kA<br />\", \"type\": \"scatter\", \"x\": [11.4109, 11.411200000000001, 11.4115], \"y\": [53.6334, 53.63315, 53.6329]}, {\"hoverinfo\": \"text\", \"marker\": {\"color\": \"rgb(128, 128, 128)\", \"size\": 1, \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"edge_center\", \"text\": [\"MV1.101 Line 1<br />I = 69.535 %<br />I_from = 0.153 kA<br />I_to = 0.153 kA<br />\", \"MV1.101 Line 2<br />I = 62.538 %<br />I_from = 0.138 kA<br />I_to = 0.138 kA<br />\", \"MV1.101 Line 3<br />I = 55.554 %<br />I_from = 0.122 kA<br />I_to = 0.122 kA<br />\", \"MV1.101 Line 4<br />I = 6.708 %<br />I_from = 0.019 kA<br />I_to = 0.019 kA<br />\", \"MV1.101 Line 5<br />I = 6.54 %<br />I_from = 0.014 kA<br />I_to = 0.014 kA<br />\", \"MV1.101 Line 6<br />I = 5.582 %<br />I_from = 0.012 kA<br />I_to = 0.012 kA<br />\", \"MV1.101 Line 7<br />I = 4.483 %<br />I_from = 0.009 kA<br />I_to = 0.01 kA<br />\", \"MV1.101 Line 8<br />I = 3.635 %<br />I_from = 0.008 kA<br />I_to = 0.008 kA<br />\", \"MV1.101 Line 9<br />I = 2.945 %<br />I_from = 0.006 kA<br />I_to = 0.006 kA<br />\", \"MV1.101 Line 10<br />I = 0.619 %<br />I_from = 0.001 kA<br />I_to = 0.001 kA<br />\", \"MV1.101 Line 11<br />I = 54.595 %<br />I_from = 0.093 kA<br />I_to = 0.093 kA<br />\", \"MV1.101 Line 12<br />I = 22.071 %<br />I_from = 0.038 kA<br />I_to = 0.038 kA<br />\", \"MV1.101 Line 13<br />I = 21.181 %<br />I_from = 0.06 kA<br />I_to = 0.06 kA<br />\", \"MV1.101 Line 14<br />I = 20.871 %<br />I_from = 0.059 kA<br />I_to = 0.059 kA<br />\", \"MV1.101 Line 15<br />I = 22.15 %<br />I_from = 0.063 kA<br />I_to = 0.063 kA<br />\", \"MV1.101 Line 16<br />I = 21.407 %<br />I_from = 0.062 kA<br />I_to = 0.062 kA<br />\", \"MV1.101 Line 17<br />I = 16.106 %<br />I_from = 0.047 kA<br />I_to = 0.047 kA<br />\", \"MV1.101 Line 18<br />I = 14.299 %<br />I_from = 0.031 kA<br />I_to = 0.031 kA<br />\", \"MV1.101 Line 19<br />I = 7.403 %<br />I_from = 0.016 kA<br />I_to = 0.016 kA<br />\", \"MV1.101 Line 20<br />I = 1.207 %<br />I_from = 0.003 kA<br />I_to = 0.003 kA<br />\", \"MV1.101 Line 21<br />I = 0.427 %<br />I_from = 0.0 kA<br />I_to = 0.001 kA<br />\", \"MV1.101 Line 22<br />I = 52.398 %<br />I_from = 0.115 kA<br />I_to = 0.115 kA<br />\", \"MV1.101 Line 23<br />I = 45.463 %<br />I_from = 0.1 kA<br />I_to = 0.1 kA<br />\", \"MV1.101 Line 24<br />I = 25.648 %<br />I_from = 0.044 kA<br />I_to = 0.044 kA<br />\", \"MV1.101 Line 25<br />I = 12.07 %<br />I_from = 0.021 kA<br />I_to = 0.021 kA<br />\", \"MV1.101 Line 26<br />I = 8.907 %<br />I_from = 0.015 kA<br />I_to = 0.015 kA<br />\", \"MV1.101 Line 27<br />I = 8.552 %<br />I_from = 0.024 kA<br />I_to = 0.024 kA<br />\", \"MV1.101 Line 28<br />I = 5.846 %<br />I_from = 0.015 kA<br />I_to = 0.017 kA<br />\", \"MV1.101 Line 29<br />I = 5.055 %<br />I_from = 0.014 kA<br />I_to = 0.014 kA<br />\", \"MV1.101 Line 30<br />I = 4.25 %<br />I_from = 0.012 kA<br />I_to = 0.012 kA<br />\", \"MV1.101 Line 31<br />I = 3.474 %<br />I_from = 0.01 kA<br />I_to = 0.01 kA<br />\", \"MV1.101 Line 32<br />I = 2.976 %<br />I_from = 0.007 kA<br />I_to = 0.008 kA<br />\", \"MV1.101 Line 33<br />I = 2.536 %<br />I_from = 0.006 kA<br />I_to = 0.007 kA<br />\", \"MV1.101 Line 34<br />I = 2.256 %<br />I_from = 0.005 kA<br />I_to = 0.005 kA<br />\", \"MV1.101 Line 35<br />I = 1.268 %<br />I_from = 0.002 kA<br />I_to = 0.003 kA<br />\", \"MV1.101 Line 36<br />I = 0.281 %<br />I_from = 0.0 kA<br />I_to = 0.001 kA<br />\", \"MV1.101 Line 37<br />I = 72.962 %<br />I_from = 0.124 kA<br />I_to = 0.124 kA<br />\", \"MV1.101 Line 38<br />I = 64.052 %<br />I_from = 0.109 kA<br />I_to = 0.109 kA<br />\", \"MV1.101 Line 39<br />I = 53.128 %<br />I_from = 0.09 kA<br />I_to = 0.09 kA<br />\", \"MV1.101 Line 40<br />I = 40.902 %<br />I_from = 0.09 kA<br />I_to = 0.09 kA<br />\", \"MV1.101 Line 41<br />I = 34.273 %<br />I_from = 0.075 kA<br />I_to = 0.075 kA<br />\", \"MV1.101 Line 42<br />I = 23.04 %<br />I_from = 0.051 kA<br />I_to = 0.051 kA<br />\", \"MV1.101 Line 43<br />I = 16.484 %<br />I_from = 0.036 kA<br />I_to = 0.036 kA<br />\", \"MV1.101 Line 44<br />I = 6.558 %<br />I_from = 0.014 kA<br />I_to = 0.014 kA<br />\", \"MV1.101 Line 45<br />I = 66.837 %<br />I_from = 0.189 kA<br />I_to = 0.189 kA<br />\", \"MV1.101 Line 46<br />I = 61.633 %<br />I_from = 0.174 kA<br />I_to = 0.174 kA<br />\", \"MV1.101 Line 47<br />I = 25.127 %<br />I_from = 0.07 kA<br />I_to = 0.071 kA<br />\", \"MV1.101 Line 48<br />I = 24.973 %<br />I_from = 0.07 kA<br />I_to = 0.071 kA<br />\", \"MV1.101 Line 49<br />I = 24.534 %<br />I_from = 0.069 kA<br />I_to = 0.069 kA<br />\", \"MV1.101 Line 50<br />I = 26.1 %<br />I_from = 0.074 kA<br />I_to = 0.074 kA<br />\", \"MV1.101 Line 51<br />I = 11.238 %<br />I_from = 0.032 kA<br />I_to = 0.032 kA<br />\", \"MV1.101 Line 52<br />I = 12.938 %<br />I_from = 0.036 kA<br />I_to = 0.037 kA<br />\", \"MV1.101 Line 53<br />I = 14.345 %<br />I_from = 0.04 kA<br />I_to = 0.041 kA<br />\", \"MV1.101 Line 54<br />I = 16.109 %<br />I_from = 0.045 kA<br />I_to = 0.046 kA<br />\", \"MV1.101 Line 55<br />I = 15.928 %<br />I_from = 0.044 kA<br />I_to = 0.045 kA<br />\", \"MV1.101 Line 56<br />I = 11.291 %<br />I_from = 0.031 kA<br />I_to = 0.032 kA<br />\", \"MV1.101 Line 57<br />I = 7.014 %<br />I_from = 0.017 kA<br />I_to = 0.02 kA<br />\", \"MV1.101 Line 58<br />I = 6.947 %<br />I_from = 0.019 kA<br />I_to = 0.02 kA<br />\", \"MV1.101 Line 59<br />I = 5.658 %<br />I_from = 0.016 kA<br />I_to = 0.016 kA<br />\", \"MV1.101 Line 60<br />I = 4.882 %<br />I_from = 0.014 kA<br />I_to = 0.014 kA<br />\", \"MV1.101 Line 61<br />I = 5.586 %<br />I_from = 0.015 kA<br />I_to = 0.016 kA<br />\", \"MV1.101 Line 62<br />I = 2.234 %<br />I_from = 0.006 kA<br />I_to = 0.006 kA<br />\", \"MV1.101 Line 63<br />I = 3.562 %<br />I_from = 0.01 kA<br />I_to = 0.01 kA<br />\", \"MV1.101 Line 64<br />I = 5.514 %<br />I_from = 0.016 kA<br />I_to = 0.016 kA<br />\", \"MV1.101 Line 65<br />I = 5.352 %<br />I_from = 0.015 kA<br />I_to = 0.015 kA<br />\", \"MV1.101 Line 66<br />I = 23.157 %<br />I_from = 0.066 kA<br />I_to = 0.066 kA<br />\", \"MV1.101 Line 67<br />I = 5.369 %<br />I_from = 0.015 kA<br />I_to = 0.015 kA<br />\", \"MV1.101 Line 68<br />I = 19.8 %<br />I_from = 0.034 kA<br />I_to = 0.034 kA<br />\", \"MV1.101 Line 69<br />I = 19.058 %<br />I_from = 0.032 kA<br />I_to = 0.032 kA<br />\", \"MV1.101 Line 70<br />I = 16.031 %<br />I_from = 0.035 kA<br />I_to = 0.035 kA<br />\", \"MV1.101 Line 71<br />I = 18.785 %<br />I_from = 0.041 kA<br />I_to = 0.041 kA<br />\", \"MV1.101 Line 72<br />I = 20.746 %<br />I_from = 0.046 kA<br />I_to = 0.046 kA<br />\", \"MV1.101 Line 73<br />I = 13.821 %<br />I_from = 0.03 kA<br />I_to = 0.03 kA<br />\", \"MV1.101 Line 74<br />I = 6.918 %<br />I_from = 0.015 kA<br />I_to = 0.015 kA<br />\", \"MV1.101 Line 75<br />I = 44.127 %<br />I_from = 0.097 kA<br />I_to = 0.097 kA<br />\", \"MV1.101 Line 76<br />I = 43.502 %<br />I_from = 0.096 kA<br />I_to = 0.096 kA<br />\", \"MV1.101 Line 77<br />I = 42.898 %<br />I_from = 0.094 kA<br />I_to = 0.094 kA<br />\", \"MV1.101 Line 78<br />I = 43.863 %<br />I_from = 0.096 kA<br />I_to = 0.096 kA<br />\", \"MV1.101 Line 79<br />I = 43.349 %<br />I_from = 0.095 kA<br />I_to = 0.095 kA<br />\", \"MV1.101 Line 80<br />I = 44.589 %<br />I_from = 0.098 kA<br />I_to = 0.098 kA<br />\", \"MV1.101 Line 81<br />I = 46.018 %<br />I_from = 0.101 kA<br />I_to = 0.101 kA<br />\", \"MV1.101 Line 82<br />I = 45.66 %<br />I_from = 0.1 kA<br />I_to = 0.1 kA<br />\", \"MV1.101 Line 83<br />I = 45.319 %<br />I_from = 0.1 kA<br />I_to = 0.1 kA<br />\", \"MV1.101 Line 84<br />I = 45.007 %<br />I_from = 0.099 kA<br />I_to = 0.099 kA<br />\", \"MV1.101 Line 85<br />I = 49.268 %<br />I_from = 0.084 kA<br />I_to = 0.084 kA<br />\", \"MV1.101 Line 86<br />I = 40.387 %<br />I_from = 0.069 kA<br />I_to = 0.069 kA<br />\", \"MV1.101 Line 87<br />I = 31.624 %<br />I_from = 0.054 kA<br />I_to = 0.054 kA<br />\", \"MV1.101 Line 88<br />I = 22.979 %<br />I_from = 0.039 kA<br />I_to = 0.039 kA<br />\", \"MV1.101 Line 89<br />I = 11.406 %<br />I_from = 0.025 kA<br />I_to = 0.025 kA<br />\", \"MV1.101 Line 90<br />I = 5.881 %<br />I_from = 0.013 kA<br />I_to = 0.013 kA<br />\", \"MV1.101 Line 91<br />I = 5.058 %<br />I_from = 0.011 kA<br />I_to = 0.011 kA<br />\", \"MV1.101 Line 92<br />I = 7.03 %<br />I_from = 0.015 kA<br />I_to = 0.015 kA<br />\", \"MV1.101 Line 93<br />I = 6.763 %<br />I_from = 0.015 kA<br />I_to = 0.015 kA<br />\", \"MV1.101 Line 94<br />I = 0.271 %<br />I_from = 0.001 kA<br />I_to = 0.0 kA<br />\", \"MV1.101 Line 95<br />I = 0.288 %<br />I_from = 0.001 kA<br />I_to = 0.0 kA<br />\", \"MV1.101 loop_line 4<br />I = 0.887 %<br />I_from = 0.002 kA<br />I_to = 0.0 kA<br />\", \"MV1.101 loop_line 5<br />I = 0.262 %<br />I_from = 0.001 kA<br />I_to = 0.0 kA<br />\", \"MV1.101 loop_line 6<br />I = 0.453 %<br />I_from = 0.001 kA<br />I_to = 0.0 kA<br />\", \"MV1.101 loop_line 1<br />I = 0.413 %<br />I_from = 0.001 kA<br />I_to = 0.0 kA<br />\", \"MV1.101 loop_line 2<br />I = 0.578 %<br />I_from = 0.001 kA<br />I_to = 0.0 kA<br />\", \"MV1.101 loop_line 3<br />I = 0.161 %<br />I_from = 0.0 kA<br />I_to = 0.0 kA<br />\"], \"type\": \"scatter\", \"x\": [11.4097], \"y\": [53.64165]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(189.51612903225794,255.0,57.25806451612913)\", \"width\": 3.0}, \"mode\": \"lines\", \"name\": \"trafos\", \"text\": \"HV1-MV1.101-Trafo1<br />I = 57.83 %<br />I_hv = 0.076 kA<br />I_lv = 0.417 kA<br />\", \"type\": \"scatter\", \"x\": [11.4096, 11.4096, 11.4096], \"y\": [53.6414, 53.6414, 53.6414]}, {\"hoverinfo\": \"text\", \"line\": {\"color\": \"rgb(189.51612903225794,255.0,57.25806451612913)\", \"width\": 3.0}, \"mode\": \"lines\", \"name\": \"trafos\", \"text\": \"HV1-MV1.101-Trafo2<br />I = 57.83 %<br />I_hv = 0.076 kA<br />I_lv = 0.417 kA<br />\", \"type\": \"scatter\", \"x\": [11.4096, 11.4096, 11.4096], \"y\": [53.6414, 53.6414, 53.6414]}, {\"hoverinfo\": \"text\", \"marker\": {\"color\": \"rgb(189.51612903225794,255.0,57.25806451612913)\", \"size\": 1, \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"edge_center\", \"text\": [\"HV1-MV1.101-Trafo1<br />I = 57.83 %<br />I_hv = 0.076 kA<br />I_lv = 0.417 kA<br />\", \"HV1-MV1.101-Trafo2<br />I = 57.83 %<br />I_hv = 0.076 kA<br />I_lv = 0.417 kA<br />\"], \"type\": \"scatter\", \"x\": [11.4096], \"y\": [53.6414]}, {\"hoverinfo\": \"text\", \"marker\": {\"color\": \"rgb(128, 128, 128)\", \"size\": 20, \"symbol\": \"square\"}, \"mode\": \"markers\", \"name\": \"external_grid\", \"text\": [\"HV1 Bus 17\"], \"type\": \"scatter\", \"x\": [11.4096], \"y\": [53.6414]}, {\"hoverinfo\": \"text\", \"marker\": {\"cmax\": 1.1, \"cmin\": 0.9, \"color\": [1.025, 1.025, 1.0112013842697316, 1.0112013842697316, 1.0128697690943884, 1.0141143802237218, 1.0149936199279408, 1.014912312214788, 1.0148714478056298, 1.014793724878396, 1.0145929108913803, 1.0145328950357078, 1.0144510380067844, 1.0147939128315542, 1.042602859869881, 1.04364019669188, 1.0118666967903076, 1.0121475657228924, 1.0125951050896407, 1.0185055926156945, 1.0239927207451422, 1.0246859082603454, 1.0249735990903663, 1.0249730299988076, 1.024973819457252, 1.0224617804579827, 1.0280751508735289, 1.0333642255691229, 1.0381562479243118, 1.0354901291429055, 1.0113001030675135, 1.0111241681442904, 1.011098956594368, 1.01108185023142, 1.0110632873463463, 1.0110084281134688, 1.0109539022934406, 1.0109479625669149, 1.0109465864334433, 1.0109500767991024, 1.034880143694443, 1.0379740176344248, 1.070212442755787, 1.0726322382396485, 1.0824622844260563, 1.085746937163467, 1.0864368714376083, 1.086873723407538, 1.0174057498624063, 1.026033180075246, 1.027510740842869, 1.029828575747243, 1.0304821871174235, 1.0308124593111503, 1.0307533880036108, 1.0309152380590336, 1.0310583702232958, 1.0318696640047986, 1.0335010383279208, 1.03418565482955, 1.0337830196374171, 1.0337974963080288, 1.0337890853280192, 1.0337873139011746, 1.033484794709833, 1.0334845683778273, 1.033538015059744, 1.0336499316883239, 1.0337669182024887, 1.031673617609465, 1.0319018834009346, 1.0152551747515204, 1.0233285707693012, 1.0237024160219557, 1.0244650545279683, 1.0276208051683164, 1.029021694794461, 1.0302417357954086, 1.0116174753554925, 1.0121194852523347, 1.0126802499146692, 1.0134409958897592, 1.0142053603804873, 1.0151941129046296, 1.016430881344348, 1.0178497160773765, 1.0190958577816516, 1.0208825152983574, 1.0296480477750125, 1.040282289193291, 1.0446860366009554, 1.052417389143021, 1.0532412394366815, 1.0533415674719937, 1.0534188147527395, 1.053611264880785, 1.0538357919670118, 1.014799538350395, 1.0334908117548587], \"colorbar\": {\"thickness\": 10, \"title\": {\"side\": \"right\", \"text\": \"Bus Voltage [pu]\"}, \"x\": 1.0}, \"colorscale\": [[0.0, \"rgb(0,0,131)\"], [0.2, \"rgb(0,60,170)\"], [0.4, \"rgb(5,255,255)\"], [0.6, \"rgb(255,255,0)\"], [0.8, \"rgb(250,0,0)\"], [1.0, \"rgb(128,0,0)\"]], \"size\": 10, \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"buses\", \"text\": [\"HV1 Bus 17<br />V_m = 1.025pu<br />V_m = 112.75 kV<br />Max_cap =43MW<br />V_a = 0.0 deg\", \"HV1 Bus 18<br />V_m = 1.025pu<br />V_m = 112.75 kV<br />Max_cap =59MW<br />V_a = 0.0 deg\", \"MV1.101 busbar1.1<br />V_m = 1.011pu<br />V_m = 20.224 kV<br />Max_cap =99MW<br />V_a = 3.827 deg\", \"MV1.101 busbar1.2<br />V_m = 1.011pu<br />V_m = 20.224 kV<br />Max_cap =66MW<br />V_a = 3.827 deg\", \"MV1.101 Bus 4<br />V_m = 1.013pu<br />V_m = 20.257 kV<br />Max_cap =11MW<br />V_a = 3.87 deg\", \"MV1.101 Bus 5<br />V_m = 1.014pu<br />V_m = 20.282 kV<br />Max_cap =79MW<br />V_a = 3.903 deg\", \"MV1.101 Bus 6<br />V_m = 1.015pu<br />V_m = 20.3 kV<br />Max_cap =95MW<br />V_a = 3.928 deg\", \"MV1.101 Bus 7<br />V_m = 1.015pu<br />V_m = 20.298 kV<br />Max_cap =30MW<br />V_a = 4.182 deg\", \"MV1.101 Bus 8<br />V_m = 1.015pu<br />V_m = 20.297 kV<br />Max_cap =24MW<br />V_a = 4.186 deg\", \"MV1.101 Bus 9<br />V_m = 1.015pu<br />V_m = 20.296 kV<br />Max_cap =51MW<br />V_a = 4.193 deg\", \"MV1.101 Bus 10<br />V_m = 1.015pu<br />V_m = 20.292 kV<br />Max_cap =20MW<br />V_a = 4.207 deg\", \"MV1.101 Bus 11<br />V_m = 1.015pu<br />V_m = 20.291 kV<br />Max_cap =77MW<br />V_a = 4.21 deg\", \"MV1.101 Bus 12<br />V_m = 1.014pu<br />V_m = 20.289 kV<br />Max_cap =51MW<br />V_a = 4.212 deg\", \"MV1.101 Bus 13<br />V_m = 1.015pu<br />V_m = 20.296 kV<br />Max_cap =48MW<br />V_a = 4.195 deg\", \"MV1.101 Bus 14<br />V_m = 1.043pu<br />V_m = 20.852 kV<br />Max_cap =91MW<br />V_a = 4.709 deg\", \"MV1.101 Bus 15<br />V_m = 1.044pu<br />V_m = 20.873 kV<br />Max_cap =97MW<br />V_a = 4.742 deg\", \"MV1.101 Bus 16<br />V_m = 1.012pu<br />V_m = 20.237 kV<br />Max_cap =81MW<br />V_a = 3.858 deg\", \"MV1.101 Bus 17<br />V_m = 1.012pu<br />V_m = 20.243 kV<br />Max_cap =85MW<br />V_a = 3.871 deg\", \"MV1.101 Bus 18<br />V_m = 1.013pu<br />V_m = 20.252 kV<br />Max_cap =76MW<br />V_a = 3.887 deg\", \"MV1.101 Bus 19<br />V_m = 1.019pu<br />V_m = 20.37 kV<br />Max_cap =91MW<br />V_a = 4.235 deg\", \"MV1.101 Bus 20<br />V_m = 1.024pu<br />V_m = 20.48 kV<br />Max_cap =5MW<br />V_a = 4.56 deg\", \"MV1.101 Bus 21<br />V_m = 1.025pu<br />V_m = 20.494 kV<br />Max_cap =45MW<br />V_a = 4.577 deg\", \"MV1.101 Bus 22<br />V_m = 1.025pu<br />V_m = 20.499 kV<br />Max_cap =74MW<br />V_a = 4.585 deg\", \"MV1.101 Bus 23<br />V_m = 1.025pu<br />V_m = 20.499 kV<br />Max_cap =82MW<br />V_a = 4.587 deg\", \"MV1.101 Bus 24<br />V_m = 1.025pu<br />V_m = 20.499 kV<br />Max_cap =52MW<br />V_a = 4.588 deg\", \"MV1.101 Bus 25<br />V_m = 1.022pu<br />V_m = 20.449 kV<br />Max_cap =27MW<br />V_a = 4.059 deg\", \"MV1.101 Bus 26<br />V_m = 1.028pu<br />V_m = 20.562 kV<br />Max_cap =45MW<br />V_a = 4.178 deg\", \"MV1.101 Bus 27<br />V_m = 1.033pu<br />V_m = 20.667 kV<br />Max_cap =50MW<br />V_a = 4.362 deg\", \"MV1.101 Bus 28<br />V_m = 1.038pu<br />V_m = 20.763 kV<br />Max_cap =89MW<br />V_a = 4.497 deg\", \"MV1.101 Bus 29<br />V_m = 1.035pu<br />V_m = 20.71 kV<br />Max_cap =97MW<br />V_a = 4.424 deg\", \"MV1.101 Bus 30<br />V_m = 1.011pu<br />V_m = 20.226 kV<br />Max_cap =95MW<br />V_a = 3.839 deg\", \"MV1.101 Bus 31<br />V_m = 1.011pu<br />V_m = 20.222 kV<br />Max_cap =62MW<br />V_a = 3.878 deg\", \"MV1.101 Bus 32<br />V_m = 1.011pu<br />V_m = 20.222 kV<br />Max_cap =35MW<br />V_a = 3.884 deg\", \"MV1.101 Bus 33<br />V_m = 1.011pu<br />V_m = 20.222 kV<br />Max_cap =17MW<br />V_a = 3.888 deg\", \"MV1.101 Bus 34<br />V_m = 1.011pu<br />V_m = 20.221 kV<br />Max_cap =81MW<br />V_a = 3.893 deg\", \"MV1.101 Bus 35<br />V_m = 1.011pu<br />V_m = 20.22 kV<br />Max_cap =13MW<br />V_a = 3.906 deg\", \"MV1.101 Bus 36<br />V_m = 1.011pu<br />V_m = 20.219 kV<br />Max_cap =67MW<br />V_a = 3.919 deg\", \"MV1.101 Bus 37<br />V_m = 1.011pu<br />V_m = 20.219 kV<br />Max_cap =87MW<br />V_a = 3.924 deg\", \"MV1.101 Bus 38<br />V_m = 1.011pu<br />V_m = 20.219 kV<br />Max_cap =85MW<br />V_a = 3.927 deg\", \"MV1.101 Bus 39<br />V_m = 1.011pu<br />V_m = 20.219 kV<br />Max_cap =17MW<br />V_a = 3.927 deg\", \"MV1.101 Bus 40<br />V_m = 1.035pu<br />V_m = 20.698 kV<br />Max_cap =26MW<br />V_a = 4.507 deg\", \"MV1.101 Bus 41<br />V_m = 1.038pu<br />V_m = 20.759 kV<br />Max_cap =20MW<br />V_a = 4.592 deg\", \"MV1.101 Bus 42<br />V_m = 1.07pu<br />V_m = 21.404 kV<br />Max_cap =21MW<br />V_a = 5.449 deg\", \"MV1.101 Bus 43<br />V_m = 1.073pu<br />V_m = 21.453 kV<br />Max_cap =71MW<br />V_a = 5.487 deg\", \"MV1.101 Bus 44<br />V_m = 1.082pu<br />V_m = 21.649 kV<br />Max_cap =72MW<br />V_a = 5.643 deg\", \"MV1.101 Bus 45<br />V_m = 1.086pu<br />V_m = 21.715 kV<br />Max_cap =21MW<br />V_a = 5.699 deg\", \"MV1.101 Bus 46<br />V_m = 1.086pu<br />V_m = 21.729 kV<br />Max_cap =74MW<br />V_a = 5.711 deg\", \"MV1.101 Bus 47<br />V_m = 1.087pu<br />V_m = 21.737 kV<br />Max_cap =43MW<br />V_a = 5.718 deg\", \"MV1.101 Bus 48<br />V_m = 1.017pu<br />V_m = 20.348 kV<br />Max_cap =88MW<br />V_a = 4.092 deg\", \"MV1.101 Bus 49<br />V_m = 1.026pu<br />V_m = 20.521 kV<br />Max_cap =53MW<br />V_a = 4.471 deg\", \"MV1.101 Bus 50<br />V_m = 1.028pu<br />V_m = 20.55 kV<br />Max_cap =77MW<br />V_a = 4.6 deg\", \"MV1.101 Bus 51<br />V_m = 1.03pu<br />V_m = 20.597 kV<br />Max_cap =50MW<br />V_a = 4.798 deg\", \"MV1.101 Bus 52<br />V_m = 1.03pu<br />V_m = 20.61 kV<br />Max_cap =13MW<br />V_a = 4.852 deg\", \"MV1.101 Bus 53<br />V_m = 1.031pu<br />V_m = 20.616 kV<br />Max_cap =49MW<br />V_a = 4.876 deg\", \"MV1.101 Bus 54<br />V_m = 1.031pu<br />V_m = 20.615 kV<br />Max_cap =75MW<br />V_a = 4.89 deg\", \"MV1.101 Bus 55<br />V_m = 1.031pu<br />V_m = 20.618 kV<br />Max_cap =37MW<br />V_a = 4.908 deg\", \"MV1.101 Bus 56<br />V_m = 1.031pu<br />V_m = 20.621 kV<br />Max_cap =63MW<br />V_a = 4.919 deg\", \"MV1.101 Bus 57<br />V_m = 1.032pu<br />V_m = 20.637 kV<br />Max_cap =33MW<br />V_a = 4.969 deg\", \"MV1.101 Bus 58<br />V_m = 1.034pu<br />V_m = 20.67 kV<br />Max_cap =94MW<br />V_a = 5.065 deg\", \"MV1.101 Bus 59<br />V_m = 1.034pu<br />V_m = 20.684 kV<br />Max_cap =45MW<br />V_a = 5.126 deg\", \"MV1.101 Bus 60<br />V_m = 1.034pu<br />V_m = 20.676 kV<br />Max_cap =82MW<br />V_a = 5.2 deg\", \"MV1.101 Bus 61<br />V_m = 1.034pu<br />V_m = 20.676 kV<br />Max_cap =22MW<br />V_a = 5.216 deg\", \"MV1.101 Bus 62<br />V_m = 1.034pu<br />V_m = 20.676 kV<br />Max_cap =29MW<br />V_a = 5.223 deg\", \"MV1.101 Bus 63<br />V_m = 1.034pu<br />V_m = 20.676 kV<br />Max_cap =89MW<br />V_a = 5.227 deg\", \"MV1.101 Bus 64<br />V_m = 1.033pu<br />V_m = 20.67 kV<br />Max_cap =32MW<br />V_a = 5.235 deg\", \"MV1.101 Bus 65<br />V_m = 1.033pu<br />V_m = 20.67 kV<br />Max_cap =22MW<br />V_a = 5.241 deg\", \"MV1.101 Bus 66<br />V_m = 1.034pu<br />V_m = 20.671 kV<br />Max_cap =40MW<br />V_a = 5.244 deg\", \"MV1.101 Bus 67<br />V_m = 1.034pu<br />V_m = 20.673 kV<br />Max_cap =95MW<br />V_a = 5.248 deg\", \"MV1.101 Bus 68<br />V_m = 1.034pu<br />V_m = 20.675 kV<br />Max_cap =95MW<br />V_a = 5.251 deg\", \"MV1.101 Bus 69<br />V_m = 1.032pu<br />V_m = 20.633 kV<br />Max_cap =33MW<br />V_a = 4.898 deg\", \"MV1.101 Bus 70<br />V_m = 1.032pu<br />V_m = 20.638 kV<br />Max_cap =8MW<br />V_a = 4.905 deg\", \"MV1.101 Bus 71<br />V_m = 1.015pu<br />V_m = 20.305 kV<br />Max_cap =2MW<br />V_a = 4.108 deg\", \"MV1.101 Bus 72<br />V_m = 1.023pu<br />V_m = 20.467 kV<br />Max_cap =95MW<br />V_a = 4.594 deg\", \"MV1.101 Bus 73<br />V_m = 1.024pu<br />V_m = 20.474 kV<br />Max_cap =33MW<br />V_a = 4.605 deg\", \"MV1.101 Bus 74<br />V_m = 1.024pu<br />V_m = 20.489 kV<br />Max_cap =80MW<br />V_a = 4.623 deg\", \"MV1.101 Bus 75<br />V_m = 1.028pu<br />V_m = 20.552 kV<br />Max_cap =27MW<br />V_a = 4.675 deg\", \"MV1.101 Bus 76<br />V_m = 1.029pu<br />V_m = 20.58 kV<br />Max_cap =26MW<br />V_a = 4.698 deg\", \"MV1.101 Bus 77<br />V_m = 1.03pu<br />V_m = 20.605 kV<br />Max_cap =65MW<br />V_a = 4.719 deg\", \"MV1.101 Bus 78<br />V_m = 1.012pu<br />V_m = 20.232 kV<br />Max_cap =76MW<br />V_a = 3.85 deg\", \"MV1.101 Bus 79<br />V_m = 1.012pu<br />V_m = 20.242 kV<br />Max_cap =98MW<br />V_a = 3.876 deg\", \"MV1.101 Bus 80<br />V_m = 1.013pu<br />V_m = 20.254 kV<br />Max_cap =26MW<br />V_a = 3.905 deg\", \"MV1.101 Bus 81<br />V_m = 1.013pu<br />V_m = 20.269 kV<br />Max_cap =60MW<br />V_a = 3.939 deg\", \"MV1.101 Bus 82<br />V_m = 1.014pu<br />V_m = 20.284 kV<br />Max_cap =21MW<br />V_a = 3.971 deg\", \"MV1.101 Bus 83<br />V_m = 1.015pu<br />V_m = 20.304 kV<br />Max_cap =60MW<br />V_a = 4.007 deg\", \"MV1.101 Bus 84<br />V_m = 1.016pu<br />V_m = 20.329 kV<br />Max_cap =64MW<br />V_a = 4.046 deg\", \"MV1.101 Bus 85<br />V_m = 1.018pu<br />V_m = 20.357 kV<br />Max_cap =18MW<br />V_a = 4.089 deg\", \"MV1.101 Bus 86<br />V_m = 1.019pu<br />V_m = 20.382 kV<br />Max_cap =80MW<br />V_a = 4.124 deg\", \"MV1.101 Bus 87<br />V_m = 1.021pu<br />V_m = 20.418 kV<br />Max_cap =29MW<br />V_a = 4.173 deg\", \"MV1.101 Bus 88<br />V_m = 1.03pu<br />V_m = 20.593 kV<br />Max_cap =70MW<br />V_a = 4.51 deg\", \"MV1.101 Bus 89<br />V_m = 1.04pu<br />V_m = 20.806 kV<br />Max_cap =36MW<br />V_a = 4.933 deg\", \"MV1.101 Bus 90<br />V_m = 1.045pu<br />V_m = 20.894 kV<br />Max_cap =38MW<br />V_a = 5.119 deg\", \"MV1.101 Bus 91<br />V_m = 1.052pu<br />V_m = 21.048 kV<br />Max_cap =93MW<br />V_a = 5.486 deg\", \"MV1.101 Bus 92<br />V_m = 1.053pu<br />V_m = 21.065 kV<br />Max_cap =44MW<br />V_a = 5.525 deg\", \"MV1.101 Bus 93<br />V_m = 1.053pu<br />V_m = 21.067 kV<br />Max_cap =8MW<br />V_a = 5.539 deg\", \"MV1.101 Bus 94<br />V_m = 1.053pu<br />V_m = 21.068 kV<br />Max_cap =94MW<br />V_a = 5.548 deg\", \"MV1.101 Bus 95<br />V_m = 1.054pu<br />V_m = 21.072 kV<br />Max_cap =27MW<br />V_a = 5.553 deg\", null, null, null], \"type\": \"scatter\", \"x\": [11.4096, 11.4096, 11.4096, 11.4096, 11.4098, 11.4098, 11.4097, 11.4119, 11.4118, 11.4117, 11.4103, 11.4099, 11.4096, 11.4125, 11.4089, 11.4091, 11.4086, 11.4083, 11.4078, 11.4039, 11.3991, 11.3983, 11.3976, 11.3973, 11.3953, 11.41, 11.4109, 11.4099, 11.4129, 11.4096, 11.4092, 11.4136, 11.4141, 11.4145, 11.415, 11.4174, 11.4201, 11.4207, 11.4215, 11.4221, 11.4066, 11.4062, 11.4023, 11.4024, 11.4077, 11.4094, 11.4095, 11.4095, 11.4065, 11.4018, 11.399000000000001, 11.3943, 11.3931, 11.3926, 11.3922, 11.3917, 11.3914, 11.3898, 11.3873, 11.3867, 11.3906, 11.3913, 11.3917, 11.3919, 11.3918, 11.3912, 11.3906, 11.3901, 11.39, 11.3922, 11.3916, 11.4086, 11.4179, 11.4179, 11.4179, 11.4152, 11.4138, 11.4115, 11.4098, 11.41, 11.4102, 11.4105, 11.4108, 11.4111, 11.4116, 11.4121, 11.4126, 11.4134, 11.4162, 11.4209, 11.4233, 11.429, 11.4291, 11.4286, 11.4281, 11.4277, 11.4271, 11.4272, 11.3972], \"y\": [53.6414, 53.6414, 53.6414, 53.6414, 53.6419, 53.6424, 53.6427, 53.6514, 53.6517, 53.6521, 53.6525, 53.6525, 53.6531, 53.6528, 53.6506, 53.6512, 53.6409, 53.6407, 53.6403, 53.6365, 53.6313, 53.6308, 53.6305, 53.6303, 53.6298, 53.636, 53.6334, 53.6302, 53.6237, 53.6267, 53.6418, 53.6432, 53.6433, 53.6434, 53.6435, 53.6439, 53.6443, 53.6445, 53.6446, 53.6446, 53.6448, 53.6453, 53.6551, 53.6563, 53.6599, 53.6576, 53.6568, 53.6554, 53.6418, 53.6428, 53.6436, 53.644, 53.644, 53.644, 53.6435, 53.6431, 53.6429, 53.6418, 53.6385, 53.6353, 53.6307, 53.6301, 53.6296, 53.6293, 53.6278, 53.6267, 53.6266, 53.6269, 53.6275, 53.645, 53.646, 53.6372, 53.6303, 53.6299, 53.6291, 53.6281, 53.6297, 53.6329, 53.6412, 53.641000000000005, 53.6408, 53.6406, 53.6403, 53.64, 53.6397, 53.6393, 53.6391, 53.6387, 53.6378, 53.637, 53.6369, 53.6404, 53.6423, 53.6431, 53.6435, 53.6439, 53.6442, 53.6555, 53.6178]}],\n","                        {\"autosize\": true, \"height\": 695.0471698112736, \"hovermode\": \"closest\", \"margin\": {\"b\": 5, \"l\": 5, \"r\": 5, \"t\": 5}, \"showlegend\": false, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"title\": {\"font\": {\"size\": 16}}, \"width\": 700.0, \"xaxis\": {\"showgrid\": false, \"showticklabels\": false, \"zeroline\": false}, \"yaxis\": {\"showgrid\": false, \"showticklabels\": false, \"zeroline\": false}},\n","                        {\"responsive\": true}\n","                    ).then(function(){\n","                            \n","var gd = document.getElementById('97ef910e-3b00-43ac-b234-8a493da910bf');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })\n","                };\n","                \n","            </script>\n","        </div>\n","</body>\n","</html>"]},"metadata":{"tags":[]}}]}]}